import streamlit as st
from pathlib import Path

# ==========================================================
# CONFIGURA√á√ÉO DA P√ÅGINA
# ==========================================================
st.title("üóÇÔ∏è Estrutura de Dados")

st.markdown(
    """
A base fornecida cont√©m m√©tricas agregadas sobre o desempenho dos chatbots, como **sess√µes totais**, **sess√µes retidas** e **sess√µes com pedido de atendimento humano**, segmentadas por **marca**, **chatbot**, **canal**, **tecnologia**, **t√≥pico**, **assunto** e **m√™s**.

Essas colunas representam contagens de sess√µes dentro de cada grupo, e n√£o sess√µes individuais. Isso significa que cada linha da base resume um conjunto de atendimentos com as mesmas caracter√≠sticas.  

A partir dessa estrutura, o primeiro passo foi desenhar um modelo que permitisse an√°lises consistentes tanto no n√≠vel agregado quanto, futuramente, no n√≠vel de cada sess√£o.

A proposta de modelagem √© um **modelo dimensional em estrela**, onde uma tabela fato central armazena as m√©tricas de desempenho e se conecta a diversas tabelas dimens√£o que descrevem os atributos do atendimento (**marca**, **canal**, **tecnologia**, **tema**, **data**, etc.).

---
"""
)

# ==========================================================
# INSER√á√ÉO DA IMAGEM DO DIAGRAMA
# ==========================================================

st.markdown("## 1.1. Estrutura proposta")

# Caminho para a imagem dentro da pasta src
image_path = Path(
    "src/diagrama_modelo_estrela.png"
)  # ajuste o nome do arquivo conforme o seu
if image_path.exists():
    st.image(
        image_path.as_posix(),
        caption="Modelo Dimensional em Estrela ‚Äî Chatbot",
        use_container_width=True,
    )
else:
    st.warning(
        f"‚ö†Ô∏è A imagem '{image_path}' n√£o foi encontrada. Verifique se ela est√° na pasta 'src/'."
    )

st.markdown(
    """

O diagrama acima representa o modelo dimensional em estrela proposto para organizar os dados do chatbot.

No centro est√° a tabela **fact_sessoes**, que armazena as m√©tricas e indicadores de desempenho referentes a cada sess√£o de atendimento.  
Ao redor dela est√£o as **tabelas dimensionais**, que cont√™m os atributos descritivos usados para segmentar e analisar as sess√µes sob diferentes perspectivas (**canal**, **marca**, **tecnologia**, **t√≥pico**, **assunto** e **data**).

Cada tabela dimens√£o se conecta √† tabela fato por meio de uma **chave prim√°ria (PK)** em sua pr√≥pria estrutura e uma **chave estrangeira (FK)** correspondente na tabela fato.  
Essas rela√ß√µes s√£o do tipo **1:N (um para muitos)** ‚Äî uma √∫nica entrada na dimens√£o pode estar associada a v√°rias sess√µes na tabela fato, mas cada sess√£o pertence a apenas uma inst√¢ncia da dimens√£o.

---

### üß© Fato principal ‚Äì `fact_sessoes`

Cont√©m um registro para cada sess√£o de atendimento realizada pelo chatbot.  
√â o centro do modelo e armazena as informa√ß√µes quantitativas e os indicadores utilizados nas an√°lises.  

Inclui tamb√©m alguns campos que ainda n√£o est√£o presentes na base fornecida, mas que seriam importantes para ampliar o entendimento sobre a efici√™ncia dos atendimentos, tanto automatizados quanto humanos.

| Coluna | Descri√ß√£o |
|:--------|:-----------|
| id_sessao | Identificador √∫nico da sess√£o |
| id_marca | Refer√™ncia para a marca (Stone/Ton) |
| id_canal | Canal de atendimento (chat_a, chat_b, etc.) |
| id_tecnologia | Tecnologia usada no canal (tech_a, tech_b) |
| id_topico | Tema macro do atendimento |
| id_assunto | Assunto espec√≠fico do atendimento |
| id_data | Data ou m√™s da sess√£o |
| pedido_atendimento | Indica se o cliente pediu atendimento humano |
| retida | Indica se a sess√£o foi resolvida pelo bot |
| duracao_segundos | Dura√ß√£o total da sess√£o |
| mensagens_totais | Quantidade de mensagens trocadas |
| satisfacao_cliente | Nota de satisfa√ß√£o (quando dispon√≠vel) |

---

### üìö Dimens√µes de refer√™ncia

Descrevem os atributos qualitativos que caracterizam cada sess√£o.  
Servem para segmentar e contextualizar as m√©tricas da tabela fato.

| Dimens√£o | Principais campos |
|:----------|:------------------|
| **dim_marca** | id_marca, nome_marca |
| **dim_canal** | id_canal, nome_canal, tipo_canal |
| **dim_tecnologia** | id_tecnologia, nome_tecnologia, fornecedor |
| **dim_topico** | id_topico, nome_topico |
| **dim_assunto** | id_assunto, nome_assunto, id_topico |
| **dim_data** | id_data, data, m√™s, ano, semana |

---

## 1.2. Vantagens do modelo em estrela

O modelo dimensional em estrela foi escolhido por equilibrar **simplicidade estrutural**, **efici√™ncia de consulta** e **flexibilidade anal√≠tica**.  
A seguir est√£o os principais benef√≠cios aplicados ao contexto dos chatbots Stone e Ton:

### üß± Escalabilidade
Novos elementos podem ser adicionados sem alterar a estrutura central.  
Por exemplo, se futuramente surgir um novo canal de atendimento (ex: chat_c) ou uma nova tecnologia (tech_c), basta inserir novos registros em `dim_canal` ou `dim_tecnologia`.  

A tabela `fact_sessoes` continua inalterada, apenas referenciando esses novos valores por meio de suas chaves estrangeiras (`id_canal`, `id_tecnologia`).

**Exemplo:**  
A inclus√£o de um novo canal ‚ÄúWhatsApp‚Äù em `dim_canal` permite que sess√µes do WhatsApp sejam registradas automaticamente em `fact_sessoes`, sem necessidade de reformular o modelo.

---

### ‚ö° Performance
As consultas e agrega√ß√µes s√£o otimizadas porque as dimens√µes s√£o pequenas e a tabela fato √© indexada por chaves num√©ricas.  
Isso permite gerar pain√©is de BI com c√°lculos r√°pidos de indicadores como **taxa de reten√ß√£o** ou **volume de atendimentos**.

Mesmo com milh√µes de sess√µes em `fact_sessoes`, uma consulta √© r√°pida e eficiente porque os joins s√£o baseados em IDs inteiros.

---

### üìè Padroniza√ß√£o
A estrutura reduz o risco de diverg√™ncia entre indicadores, j√° que todos os c√°lculos partem da mesma **fonte de verdade ‚Äî `fact_sessoes`**.  

Assim, a taxa de reten√ß√£o ou o n√∫mero total de sess√µes ser√° sempre o mesmo, independentemente da dimens√£o usada na an√°lise.

**Exemplo:**  
Tanto um analista que analisa a taxa de reten√ß√£o por `dim_marca` quanto outro que analisa por `dim_topico` obter√£o valores consistentes, pois ambos usam a mesma defini√ß√£o de `retida` e `sessoes_total` da tabela fato.

---

### üîç Flexibilidade anal√≠tica
O modelo facilita cruzar informa√ß√µes de diferentes perspectivas sem retrabalho.  

Como todas as dimens√µes est√£o ligadas √† mesma tabela fato, √© poss√≠vel analisar o desempenho sob diversos recortes.  

**Exemplo:**  
Comparar a taxa de reten√ß√£o entre **marcas (`dim_marca`)** e **canais (`dim_canal`)** ou entender quais **t√≥picos (`dim_topico`)** t√™m maior volume de pedidos de atendimento humano em cada **tecnologia (`dim_tecnologia`)**.  

Tudo isso pode ser feito apenas alterando os filtros ou joins nas consultas, sem mudar a estrutura.

---

## 1.3. Limita√ß√µes e cuidados do modelo em estrela

Apesar de suas vantagens, o modelo estrela tamb√©m apresenta alguns pontos de aten√ß√£o que precisam ser considerados no contexto do chatbot:

### üîÅ Atualiza√ß√£o das dimens√µes
Como as dimens√µes s√£o tabelas est√°ticas, √© preciso garantir que estejam sempre atualizadas.  

**Exemplo:**  
Se uma nova tecnologia for implantada e n√£o for cadastrada em `dim_tecnologia`, as sess√µes relacionadas a ela poder√£o ser carregadas com chave nula (`id_tecnologia = NULL`), prejudicando as an√°lises.

---

### üß© Custo inicial de modelagem
A cria√ß√£o e manuten√ß√£o das dimens√µes exigem um esfor√ßo de **ETL adicional**, especialmente na normaliza√ß√£o de nomes de canais, t√≥picos e assuntos.  
Isso aumenta o trabalho inicial de desenvolvimento, mas compensa em **confiabilidade** e **performance** a longo prazo.

---

### üèóÔ∏è Necessidade de governan√ßa
Com o crescimento das fontes de dados, √© essencial manter uma **governan√ßa clara das dimens√µes**.  

**Exemplo:**  
Se ‚Äúchat_a‚Äù e ‚ÄúChat A‚Äù forem cadastrados como dois registros diferentes em `dim_canal`, isso pode causar **distor√ß√µes nos resultados** e **duplicidade de indicadores**.
"""
)
